---
openapi: 3.0.1
info:
  title: API V1
  version: v1

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

paths:
  /api/signup:
    post:
      summary: Creates a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
      responses: 
        '201':
          description: Created
  /api/login:
    post:
      summary: login a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    role:
                      type: string
      responses: 
        '201':
          description: Created
  /api/logout:
    delete:
      summary: Logout from account.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                
      responses: 
        '201':
          description: Created
  /api/forgot_password:
    post:
      summary: user forgets password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
      responses: 
        '201':
          description: Created
  /api/reset_password:
    post:
      summary: user reset password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    reset_password_token:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
      responses: 
        '201':
          description: Created  
  /leaves:
    get:
      summary: Retrieve a list of leaves
      tags:
        - Leaves API
      responses:
        '200':
          description: Successful response
        '500':
          description: Internal server error

    post:
      summary: Create a new leave
      description: Use this API to create a new leave.
      tags:
        - Leaves API
      requestBody:
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      leave:
                        type: object
                        properties:
                          from_time:
                            type: string
                          to_time:
                            type: string
                          leave_type:
                            type: string
                          from_date:
                            type: string
                          to_date:
                            type: string
                          leave_status:
                            type: string
                          reason:
                            type: string
                          consumed_leave:
                            type: integer
                          apply_to:
                            type: string
      responses:
        '201':
          description: Leave created successfully
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  /leaves/{id}:
    get:
      summary: Show a leave
      tags:
        - Leaves API
      parameters:
        - name: id
          in: path
          description: ID of the leave to show
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
        '404':
          description: Leave not found
        '500':
          description: Internal server error
    put:
      summary: update leaves.
      tags:
        - Leaves API
      parameters:
        - name: id
          in: path
          description: ID of the leave to update
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                leave:
                        type: object
                        properties:
                          from_time:
                            type: string
                          to_time:
                            type: string
                          leave_type:
                            type: string
                          from_date:
                            type: string
                          to_date:
                            type: string
                          leave_status:
                            type: string
                          reason:
                            type: string
                          consumed_leave:
                            type: string

      responses: 
        '201':
          description: Created 
    
    delete:
      summary: delete leaves.
      tags:
        - Leaves API
      parameters:
        - name: id
          in: path
          description: ID of the leave to update
          required: true
          schema:
            type: integer
      responses: 
        '201':
          description: Created 
  /displayleaves:
    get:
      summary: Retrieve a list of leaves for dashboard
      tags:
        - Leaves API
      responses:
        '200':
          description: Successful response
        '500':
          description: Internal server error


  /statuses:
    get:
      summary: Retrieve a list of statuses
      tags:
        - Status API
      responses:
        '200':
          description: Successful response
        '500':
          description: Internal server error

    post:
      summary: add a new status
      description: Use this API to create a new status.
      tags:
        - Status API
      requestBody:
              required: true
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      status:
                        type: object
                        properties:
                          to:
                            type: string
                          cc:
                            type: string
                          status_date:
                            type: string
                          tasks_attributes:
                            type: object
                            properties:
                              working_hours:
                                type: string
                              task_status:
                                type: string
                              task_description:
                                type: string
                              billing_hours:
                                type: string
                              project_id:
                                type: string
      responses:
        '201':
          description: status created successfully
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  /statuses/{id}:
    get:
      summary: Show a status.
      tags:
        - Status API
      parameters:
        - name: id
          in: path
          description: ID of the leave to update
          required: true
          schema:
            type: integer                
      responses: 
        '201':
          description: Created
    put:
      summary: update Status.
      tags:
        - Status API
      parameters:
        - name: id
          in: path
          description: ID of the leave to update
          required: true
          schema:
            type: integer  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                        type: object
                        properties:
                          to:
                            type: string
                          cc:
                            type: string
                          status_date:
                            type: string
                          tasks_attributes:
                            type: object
                            properties:
                              working_hours:
                                type: string
                              task_status:
                                type: string
                              task_description:
                                type: string
                              billing_hours:
                                type: string
                              project_id:
                                type: string
      responses: 
        '201':
          description: Created 
    
    delete:
      summary: delete Status.
      tags:
        - Status API
      parameters:
        - name: id
          in: path
          description: ID of the leave to update
          required: true
          schema:
            type: integer
      responses: 
        '201':
          description: Created 

  /users/{id}/assign_managers:
    post:
      summary: assign managers.
      tags:
        - Managers API
      parameters:
        - name: id
          in: path
          description: ID of the user to assign manager
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                manager_ids:
                        type: array
                        items:
                          type: integer
              example:
                manager_ids: [3, 6]                        
        responses: 
        '201':
          description: status created successfully
        '400':
          description: Invalid request
        '500':
          description: Internal server error

  /managers:
    get:
      summary: Show the manager of a user.
      tags:
        - Managers API               
      responses: 
        '201':
          description: status created successfully
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  
  /users/{id}:
    get:
      summary: Show a user.
      tags:
        - Users API
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer                
      responses: 
        '201':
          description: Created
  
  /users/new_user:
    post:
      summary: Creates a user.
      tags:
        - Users API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    full_name:
                      type: string
                    father_name:
                      type: string
                    mother_name:
                      type: string
                    location:
                      type: string
                    linkedin_profile:
                      type: string
                    contact_no:
                      type: string
                    personal_email:
                      type: string
                    official_email:
                      type: string
                    emergency_contact:
                      type: string
                    blood_group:
                      type: string
                    marital_status:
                      type: string
                    date_of_birth:
                      type: string
                      format: date
                    uan_no:
                      type: string
                    esic_no:
                      type: string
                    employee_id:
                      type: string
                    employee_type:
                      type: string
                    job_type:
                      type: string
                    date_of_joining:
                      type: string
                      format: date
                    relieving_date:
                      type: string
                      format: date
                    resignation_date:
                      type: string
                      format: date
                    resignation_status:
                      type: string
                    notice_period:
                      type: string
                    retention_bonus:
                      type: boolean
                    retention_time:
                      type: string
                    retention_bonus_no:
                      type: string
                  example:
                      email: "john.doe@example.com"
                      password: "securepassword"
                      password_confirmation: "securepassword"
                      full_name: "John Doe"
                      father_name: "John Doe Sr."
                      mother_name: "Mary Doe"
                      location: "New York"
                      linkedin_profile: "https://www.linkedin.com/in/johndoe/"
                      contact_no: "1234567890"
                      personal_email: "john.doe.personal@example.com"
                      official_email: "john.doe@company.com"
                      emergency_contact: "9876543210"
                      blood_group: "A+"
                      marital_status: "Single"
                      date_of_birth: "1990-01-01"
                      uan_no: "UAN1234567890"
                      esic_no: "ESIC123456"
                      employee_id: "EMP001"
                      employee_type: "Full-Time"
                      job_type: "Software Engineer"
                      date_of_joining: "2022-01-01"
                      relieving_date: null
                      resignation_date: null
                      resignation_status: null
                      notice_period: "1 month"
                      retention_bonus: true
                      retention_time: "2 years"
                      retention_bonus_no: "RB123"
      responses:
        '201':
          description: User created successfully.
        '422':
          description: Unprocessable Entity - Request validation failed.
  
  /salary_infos/{id}:
    get:
      summary: Show salary information .
      tags:
        - Salary API
      parameters:
        - name: id
          in: path
          description: ID of the leave to update
          required: true
          schema:
            type: integer                
      responses: 
        '201':
          description: Created
    put:
      summary: update Salary data.
      tags:
        - Salary API
      parameters:
        - name: id
          in: path
          description: ID of the leave to update
          required: true
          schema:
            type: integer  
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salary_info:
                  type: object
                  properties:
                    basic_salary:
                      type: string
                    allowance_medical:
                      type: string
                    hra:
                      type: string
                    allowance_special:
                      type: string
                    incentives:
                      type: string                        
      responses: 
        '201':
          description: Created 
  /salary_infos:
    get:
      summary: Show all salary information .
      tags:
        - Salary API              
      responses: 
        '201':
          description: Created
    post:
      summary: Create Salary data.
      tags:
        - Salary API 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                salary_info:
                  type: object
                  properties:
                    basic_salary:
                      type: string
                    allowance_medical:
                      type: string
                    hra:
                      type: string
                    allowance_special:
                      type: string
                    incentives:
                      type: string                        
      responses: 
        '201':
          description: Created 


  /bank_details:
    post:
      summary: Creates a Bank detail.
      tags:
        - Bank details API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_details:
                  type: object
                  properties:
                    account_name:
                      type: string
                    account_number:
                      type: string
                    ifsc:
                      type: string
                    cancelled_cheque:
                      type: string
                    # user_id:
                    #   type: integer
                    #   format: int64
      responses:
        '201':
          description: Created
  /bank_details/{id}:
    put:
      summary: Update bank details
      tags:
        - Bank details API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    reset_password_token:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
      responses:
        '201':
          description: Created     
  # /bank_details/{id}:
    get:
      summary: See bank details
      tags:
        - Bank details API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    reset_password_token:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
      responses:
        '201':
          description: Created
      
  # /bank_details/{id}:
    delete:
      summary: Delete bank details
      tags:
        - Bank details API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    reset_password_token:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
      responses:
        '201':
          description: Created











servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000

